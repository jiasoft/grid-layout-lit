{"version":3,"file":"grid-layout-lit.js","sourceRoot":"","sources":["../../src/grid-layout-lit.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css, LitElement } from 'lit'\r\nimport { property, state, customElement } from 'lit/decorators.js'\r\nimport {\r\n    GridItemReizeName,\r\n    GridItemStyleType,\r\n    ActiveGridItemStyleType,\r\n    GridItemData,\r\n    ItemData\r\n} from './types'\r\nimport {\r\n    MORE_SVG,\r\n    TITLE_SVG,\r\n    DELETE_SVG,\r\n    ADD_SVG,\r\n    BACK_LAYOUT,\r\n    FORWARD_LAYOUT,\r\n    SAVE_LAYOUT,\r\n    CLOSE_LAYOUT,\r\n    EDIT_SVG,\r\n    STYLE_SVG,\r\n    ZINDEX_UP_SVG,\r\n    ZINDEX_DOWN_SVG,\r\n    DELETE_LAYOUT_SVG\r\n} from './icon'\r\n// import { generateRandomUID } from '../../lib/api'\r\nconst generateRandomUID = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0,\r\n            v = c === 'x' ? r : (r & 0x3) | 0x8\r\n        return v.toString(16)\r\n    })\r\n}\r\ntype HtmlPosition = {\r\n    left: number\r\n    top: number\r\n}\r\ntype GridPosition = {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nconst DRAG_ID = '100000'\r\n@customElement('grid-layout-lit')\r\nexport class GridLayoutLit extends LitElement {\r\n    /**\r\n     * @state 相当于数据绑定 有变化触发页面渲染\r\n     * @property 外部可调用 外部传入\r\n     */\r\n\r\n    /**\r\n     * 这个属性改动，页面才会render\r\n     */\r\n    @state() RenderIndex: number = 0\r\n    /**\r\n     * 网格间距,每个间距是一个网格数\r\n     */\r\n    @property({ type: Number }) gridMargin = 1\r\n    @property({ type: Boolean }) edit = false\r\n    @property({ type: Array }) layoutData: GridItemData[] = []\r\n    @property({ type: Boolean }) hideToolbar = false\r\n    @property({ type: Array }) headerConfigList = []\r\n    /**\r\n     * 拖拽布局默认样式\r\n     */\r\n    private $layoutDefaultGridStyle: GridItemStyleType = {\r\n        borderRadius: 3,\r\n        borderColor: '#c3c3c3',\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        titleColor: '',\r\n        contentColor: '',\r\n        disableScrollBars: false\r\n    }\r\n    @property({ type: Object })\r\n    get layoutDefaultGridStyle(): GridItemStyleType {\r\n        return this.$layoutDefaultGridStyle\r\n    }\r\n    @property({ type: Object }) i18n = {\r\n        t: (k: string, b: boolean) => k,\r\n        tt: (k: string, b: boolean) => k,\r\n        locale: 'zh-cn'\r\n    }\r\n    set layoutDefaultGridStyle(val: GridItemStyleType) {\r\n        this.$layoutDefaultGridStyle = val || this.$layoutDefaultGridStyle\r\n        this.style.overflowY = this.isDisableScrollBars ? 'hidden' : 'auto'\r\n    }\r\n    /**\r\n     * 拖拽布局总体宽度 像素\r\n     */\r\n    @property({ type: Number })\r\n    stageWidth: number = 1000\r\n    /**\r\n     * 拖拽布局总体高度 像素\r\n     */\r\n    @property({ type: Number })\r\n    stageHeight: number = 800\r\n    /**\r\n     * 是否显示滚动条\r\n     */\r\n    get hasDisplayScrollBar() {\r\n        if (this.layoutDefaultGridStyle.disableScrollBars) return false\r\n        return this.calcStageActualHeight > this.clientHeight\r\n    }\r\n    // @property({ type: Boolean }) disableScrollBars = false //是否禁止滚动\r\n    /**\r\n     * 宽度最大的网格数\r\n     */\r\n    maxGridItemWidthCount: number = 173\r\n    /**\r\n     * 高度最大的网格数\r\n     */\r\n    maxGridItemHeightCount: number = 86\r\n    /**\r\n     * 当前点击弹出菜单的Postion\r\n     */\r\n    curGridItemSubMenuPos: GridPosition = { x: 0, y: 0 }\r\n    /**\r\n     * 显示相关的GridItem 的菜单\r\n     */\r\n    curGridItemSubMenuShow: boolean = false\r\n    /**\r\n     * 当前点击弹出菜单GridItem\r\n     */\r\n    curGridItemSubMenuGridData: GridItemData | null = null\r\n\r\n    // styleMapEditing: boolean = false\r\n    showDialogGridStyle: boolean = false\r\n    /**\r\n     * 底部占位阴影的数据\r\n     * (所有gridItem共用一个阴影)\r\n     */\r\n    dragData = { x: 0, y: 0, w: 60, h: 60, z: 0, id: DRAG_ID }\r\n    draggIng: boolean = false\r\n    floatStep: number = 1\r\n    lightningId: string = ''\r\n    /** resize相关 */\r\n\r\n    /**\r\n     * 移动初始位置\r\n     */\r\n    resizeFixPosition: any = { top: 0, left: 0 }\r\n    /**\r\n     * 移动中的位置\r\n     */\r\n    resizeingPosition: any = { top: 0, left: 0 }\r\n    /**\r\n     * 移动初始griditem 数据\r\n     */\r\n    resizeFixGridItemData: GridItemData | null = null\r\n    /**\r\n     * 当前移动中的 gridItem 数据\r\n     */\r\n    curResizingGridItemData: any | null = null\r\n\r\n    /**\r\n     * 暂时无用\r\n     * 存储数据\r\n     */\r\n    dataStore: any[] = []\r\n    dataStoreIndex: number = 0\r\n    curMovingGridItemData: any | null = null\r\n    movePosition: HtmlPosition = { left: 0, top: 0 }\r\n    // fixPosition: HtmlPosition = { left: 0, top: 0 }\r\n    // oldPosition: HtmlPosition = { left: 0, top: 0 }\r\n    transition: boolean = false\r\n    /**\r\n     * 默认 每个拖拽项目的宽高 所占的网格数\r\n     */\r\n    defaultGridItemWidth: number = 13\r\n    defaultGridItemHeight: number = 7\r\n\r\n    defaultRightMargin: number = 3\r\n    /**\r\n     * 是否禁止滚动条\r\n     */\r\n    get isDisableScrollBars(): boolean {\r\n        return this.layoutDefaultGridStyle.disableScrollBars\r\n    }\r\n    /**\r\n     * 正常情况下 有滚动条 的时候 每个网格的宽度所占的像素值\r\n     */\r\n    get griddingWidth(): number {\r\n        return this.stageWidth / this.maxGridItemWidthCount\r\n    }\r\n    /**\r\n     * 计算每个网格的高度所占的像素值\r\n     */\r\n    get griddingHeight(): number {\r\n        //满屏算法  计算没有滚动条的时候 计算出每个网格的高度\r\n        if (!this.edit && this.layoutDefaultGridStyle?.disableScrollBars) {\r\n            const _griddingHeight: number = this.stageHeight / this.calcStageVirtualHeight\r\n            return _griddingHeight < this.griddingWidth ? _griddingHeight : this.griddingWidth\r\n        }\r\n        return this.griddingWidth\r\n    }\r\n    /**\r\n     * 选中的GridItem\r\n     */\r\n    get selectedGridItem() {\r\n        return this.layoutData.find(item => item.selected)\r\n    }\r\n    /**\r\n     * 重新渲染\r\n     */\r\n    reRender() {\r\n        this.RenderIndex++\r\n    }\r\n    /**\r\n     * 拖拽阴影dom\r\n     * @returns\r\n     */\r\n    drawDragDataHtml() {\r\n        return html`<div\r\n            class=\"grid-item drag\"\r\n            drag=\"${true}\"\r\n            style=\"${this.getGridItemStyle(this.dragData)}\"\r\n        ></div>`\r\n    }\r\n    constructor() {\r\n        super()\r\n    }\r\n    /**\r\n     * 查找GridItem\r\n     * @param id gridItem id\r\n     * @returns\r\n     */\r\n    findGridItemData = (id: any): GridItemData | undefined => {\r\n        return this.layoutData.find((item: GridItemData) => item.id === id)\r\n    }\r\n    /**\r\n     * 添加 gridItem\r\n     * @returns\r\n     */\r\n    addGridItem() {\r\n        const w = this.defaultGridItemWidth\r\n        const h = this.defaultGridItemHeight\r\n        const { x, y } = this.getEmptyBound(w, h, false)\r\n        const tid = generateRandomUID()\r\n        const floatCount = this.layoutData.filter(item => item.float).length\r\n        const item: GridItemData = {\r\n            x,\r\n            y,\r\n            w,\r\n            h,\r\n            z: floatCount,\r\n            id: tid,\r\n            slot: 'slot_' + tid,\r\n            title: tid\r\n        }\r\n        if (this.isDisableScrollBars) {\r\n            const maxHeight = this.getBoundingClientRect().height\r\n            if ((y + h) * this.griddingWidth >= maxHeight) {\r\n                item.float = true\r\n                if (\r\n                    (this.floatStep + item.w) * this.griddingWidth >= this.stageWidth ||\r\n                    (this.floatStep + item.h) * this.griddingHeight >= maxHeight\r\n                ) {\r\n                    this.floatStep = 1\r\n                }\r\n                item.y = this.floatStep + 1\r\n                item.x = this.floatStep + 1\r\n\r\n                this.floatStep = item.y\r\n            }\r\n        }\r\n\r\n        this.layoutData.push(item)\r\n        this.reRender()\r\n        this.saveCurLayout()\r\n\r\n        return item\r\n    }\r\n    /**\r\n     * 闪一下Grid的样式\r\n     * @param grid\r\n     */\r\n    lightningGrid(grid: GridItemData) {\r\n        this.lightningId = String(grid.id)\r\n        this.reRender()\r\n        this.focusGridItem(grid)\r\n        setTimeout(() => {\r\n            this.lightningId = ''\r\n            this.reRender()\r\n        }, 500)\r\n    }\r\n    /**\r\n     * 移动到这个GridItem的显示屏上\r\n     * @param grid\r\n     */\r\n    focusGridItem(grid: GridItemData) {\r\n        setTimeout(async () => {\r\n            const index: number = this.layoutData.findIndex(item => item.id === grid.id)\r\n            const element: Element | null | undefined = await this.getGridItemElement(index)\r\n            if (!element) return\r\n            const input = document.createElement('input')\r\n            input.style.position = 'absolute'\r\n            input.style.opacity = '0.01'\r\n            element.appendChild(input)\r\n            input.focus()\r\n            setTimeout(() => {\r\n                element.removeChild(input)\r\n            }, 50)\r\n        }, 100)\r\n    }\r\n    /**\r\n     * 获取GridItem的元素\r\n     * @param index gridItem的index\r\n     * @returns\r\n     */\r\n    getGridItemElement(index: number): Promise<Element | null | undefined> {\r\n        return new Promise(resolve => {\r\n            let length = 20\r\n            const loopfindGridItem = () => {\r\n                const ele: Element | null | undefined = this.shadowRoot?.querySelector(\r\n                    `.grid-item[data-index=\"${index}\"]`\r\n                )\r\n                if (ele) {\r\n                    resolve(ele)\r\n                } else {\r\n                    setTimeout(() => {\r\n                        if (--length <= 0) {\r\n                            resolve(null)\r\n                            return\r\n                        }\r\n                        loopfindGridItem()\r\n                    }, 10)\r\n                }\r\n            }\r\n            loopfindGridItem()\r\n        })\r\n    }\r\n    /**\r\n     * 获取空间的位置\r\n     * @param w\r\n     * @param h\r\n     * @returns { x, y }\r\n     */\r\n    getEmptyBound(w: number, h: number, exceptFloatItem: boolean = true) {\r\n        let x = this.gridMargin,\r\n            y = this.gridMargin\r\n        let item = this.findBigestOverlapItem(this.layoutData, x, y, w, h, [], exceptFloatItem)\r\n        while (item) {\r\n            x = item.x + item.w + this.gridMargin\r\n            if (\r\n                (x + this.gridMargin) * this.griddingWidth + w * this.griddingWidth >\r\n                this.stageWidth\r\n            ) {\r\n                y += this.gridMargin\r\n                x = this.gridMargin\r\n            }\r\n            item = this.findBigestOverlapItem(this.layoutData, x, y, w, h, [], exceptFloatItem)\r\n        }\r\n        return { x, y }\r\n    }\r\n    /**\r\n     * 查找存在的最大的重叠交叉项\r\n     * */\r\n    findBigestOverlapItem = (\r\n        dataList: GridItemData[],\r\n        x: number,\r\n        y: number,\r\n        w: number, //每个网格宽度所占的像素值\r\n        h: number, //每个网格高度所占的像素值\r\n        exceptIds: any[],\r\n        exceptFloatItem: boolean = true\r\n    ): GridItemData | undefined => {\r\n        const list = this.findOverlapItem(dataList, x, y, w, h, exceptIds, 0, exceptFloatItem)\r\n        let BigestOverlapArea = -99999999999 //最大的重叠交叉面积\r\n        let BigestOverlapItem: any = undefined\r\n        list.forEach((item: any) => {\r\n            const curItemX = item.x\r\n            const curItemY = item.y\r\n            const curItemW = item.w\r\n            const curItemH = item.h\r\n            const overX1 = Math.max(x, curItemX)\r\n            const overX2 = Math.min(x + w, curItemX + curItemW)\r\n            const overW = overX2 - overX1\r\n            const overY1 = Math.max(y, curItemY)\r\n            const overY2 = Math.min(y + h, curItemY + curItemH)\r\n            const overH = overY2 - overY1\r\n            const overArea = overH * overW\r\n            if (overArea > BigestOverlapArea) {\r\n                BigestOverlapArea = overArea\r\n                BigestOverlapItem = item\r\n            }\r\n        })\r\n\r\n        return BigestOverlapItem\r\n    }\r\n    /**\r\n     * 获取交叉的GridItem 列表\r\n     * @param x x\r\n     * @param y y\r\n     * @param w w\r\n     * @param h h\r\n     * @param exceptIds 排除的id\r\n     * @param exceptFloatItem 排除 浮动的项目\r\n     * @param overCount 暂时定为 允许 重叠的网格个数\r\n     * @returns 交叉的GridItem 列表\r\n     */\r\n    findOverlapItem = (\r\n        dataList: GridItemData[],\r\n        x: number,\r\n        y: number,\r\n        w: number,\r\n        h: number,\r\n        exceptIds: any[],\r\n        overCount: number = 0,\r\n        exceptFloatItem: boolean = true\r\n    ): GridItemData[] => {\r\n        const list: GridItemData[] = []\r\n        let data = [...dataList]\r\n        if (exceptFloatItem) data = data.filter((item: any) => !item.float)\r\n        if (this.curActiveGridItem && this.dragData) {\r\n            // 如果有正在拖动的 那么 将正在拖动的项目添加到列表中\r\n            if (!data.find(item => item.id === this.dragData.id)) {\r\n                data = [...data, this.dragData]\r\n            }\r\n        }\r\n        for (let i = 0; i < data.length; i++) {\r\n            const item = data[i]\r\n            // 如果当前项目正在排出列表中 直接跳过循环\r\n            if (exceptIds && exceptIds.indexOf(item.id) >= 0) {\r\n                continue\r\n            }\r\n            // 当前项目的位置 大小 信息\r\n            const curItemX = item.x\r\n            const curItemY = item.y\r\n            const curItemW = item.w\r\n            const curItemH = item.h\r\n            // 对比项目(传入的) 与当前项目 对比 取出较小的\r\n            const x1 = Math.min(curItemX, x)\r\n            // 对比项目(传入的) 与当前项目 对比 取出较大的\r\n            const x2 = Math.max(curItemX + curItemW, x + w)\r\n\r\n            const y1 = Math.min(curItemY, y)\r\n            const y2 = Math.max(curItemY + curItemH, y + h)\r\n\r\n            //是否存在交叉的算法\r\n            // 假如两个项目重叠  那么 第一个项目的最左侧 + 第二个项目的最右侧 的 宽度 一定小于 两个 项目的宽度和\r\n            // 高度同上\r\n            if (\r\n                x2 - x1 - (curItemW + w) + overCount < this.gridMargin &&\r\n                y2 - y1 - (curItemH + h) + overCount < this.gridMargin\r\n            ) {\r\n                list.push(item)\r\n            }\r\n        }\r\n        return list\r\n    }\r\n    /**\r\n     * Resize start 拖拉grid item 的大小\r\n     * @param event MouseEvent\r\n     */\r\n    gridItemResizeStart(event: MouseEvent) {\r\n        if (!this.edit) return\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        // 获取当前 item的索引\r\n        const index = this.getGridItemIndex(event.currentTarget)\r\n        // 当前拖拽项目数据\r\n        this.curResizingGridItemData = this.layoutData[index]\r\n        // 复制当前拖拽项目数据\r\n        this.resizeFixGridItemData = { ...this.layoutData[index] }\r\n        // 鼠标的位置\r\n        // 记录鼠标按下时的位置\r\n        this.resizeFixPosition.left = event.clientX\r\n        this.resizeFixPosition.top = event.clientY\r\n        // 记录鼠标拖动中的位置\r\n        this.resizeingPosition.left = event.clientX\r\n        this.resizeingPosition.top = event.clientY\r\n        // 开启动画效果\r\n        this.transition = true\r\n        // 重新渲染\r\n        this.reRender()\r\n        // 设置dom 今只文字选中\r\n        document.body.setAttribute('onselectstart', 'return false')\r\n        // 设置鼠标为 resize 状态\r\n        document.body.style.cursor = 'se-resize'\r\n\r\n        // 鼠标移动方法\r\n        const mouseMove = (event: MouseEvent) => {\r\n            // 鼠标移动的时候方块大小改变\r\n            this.gridItemResizeing(event)\r\n        }\r\n        // 初始化阴影的位置 所有网格共用一个阴影\r\n        const { x, y, w, h, id } = this.curResizingGridItemData\r\n        this.dragData.x = x\r\n        this.dragData.y = y\r\n        this.dragData.w = w\r\n        this.dragData.h = h\r\n        // 释放鼠标左键触发的方法\r\n        const mouseup = () => {\r\n            // 移除选中文字的属性\r\n            document.body.removeAttribute('onselectstart')\r\n            // 去除鼠标箭头样式\r\n            document.body.style.cursor = ''\r\n            // 结束网格 resize 状态\r\n            this.gridItemResizeEnd()\r\n            window.removeEventListener('mousemove', mouseMove)\r\n            window.removeEventListener('mouseup', mouseup)\r\n        }\r\n        // 鼠标移动方法\r\n        window.addEventListener('mousemove', mouseMove)\r\n        // 鼠标松开\r\n        window.addEventListener('mouseup', mouseup)\r\n    }\r\n    /**\r\n     * resizeing  中的方法\r\n     * @param event\r\n     */\r\n    gridItemResizeing(event: any) {\r\n        // 不是编辑状态 不让拖\r\n        if (!this.edit) return\r\n        // 代码保护\r\n        if (!this.curResizingGridItemData) return\r\n        // 记录移动后鼠标的位置\r\n        this.resizeingPosition.left = event.clientX\r\n        this.resizeingPosition.top = event.clientY\r\n        if (!this.resizeFixGridItemData) return\r\n        /**\r\n         * 最终的网格数 = 当前选中的gridItem resize之前的宽度所占的网格数 + 移动过程中 新增/减少 的网格数\r\n         * 移动过程中 新增/减少 的网格数 = (移动后鼠标的位置像素值 - 移动前鼠标的位置像素值) / 每个网格所占的像素值\r\n         */\r\n        let w =\r\n            this.resizeFixGridItemData?.w +\r\n            Math.round(\r\n                (this.resizeingPosition.left - this.resizeFixPosition.left) / this.griddingWidth\r\n            )\r\n        let h =\r\n            this.resizeFixGridItemData?.h +\r\n            Math.round(\r\n                (this.resizeingPosition.top - this.resizeFixPosition.top) / this.griddingHeight\r\n            )\r\n        // 容器最左端 到该网格左上角的位置横向网格数\r\n        const x = this.resizeFixGridItemData?.x\r\n        // 容器的最上端 到该网格左上角的位置纵向网格数\r\n        const y = this.resizeFixGridItemData?.y\r\n        // 暂时无用 浮动代码可能有用\r\n        const z = this.resizeFixGridItemData?.z\r\n\r\n        // 调整大小之后 网格 高度的像素值\r\n        const height =\r\n            this.resizeFixGridItemData.h * this.griddingHeight +\r\n            (this.resizeingPosition.top - this.resizeFixPosition.top)\r\n        // 调整大小之后 网格 宽度的像素值\r\n        let width =\r\n            this.resizeFixGridItemData.w * this.griddingWidth +\r\n            (this.resizeingPosition.left - this.resizeFixPosition.left)\r\n        // resize过程中 最多只能拖到容器的最大宽度\r\n        if (width > this.stageWidth - x * this.griddingWidth) {\r\n            width = this.stageWidth - x * this.griddingWidth\r\n        }\r\n        // 当前resizing 实时变化的宽度和高度 位置信息\r\n        this.curResizingGridItemData.style = {\r\n            width,\r\n            height,\r\n            left: x * this.griddingWidth,\r\n            top: y * this.griddingHeight\r\n        }\r\n\r\n        // resize 完成 之后\r\n        /** 不允许超出stageWidth */\r\n        w =\r\n            w * this.griddingWidth <= this.stageWidth - (x + this.gridMargin) * this.griddingWidth\r\n                ? w\r\n                : Math.floor(this.stageWidth / this.griddingWidth) - x - this.gridMargin\r\n\r\n        if (this.isDisableScrollBars) {\r\n            /** 不允许超出stageHeight */\r\n            h =\r\n                h * this.griddingHeight <=\r\n                    this.stageHeight - (y + this.gridMargin) * this.griddingHeight\r\n                    ? h\r\n                    : Math.floor(this.stageHeight / this.griddingHeight) - x - this.gridMargin\r\n        }\r\n\r\n        // 最小 的 高度和宽度只能拖到 8 和 4\r\n        w = w < 8 ? 8 : w\r\n        h = h < 4 ? 4 : h\r\n        // 设置拖拽状态\r\n        this.draggIng = true\r\n        // 设置阴影的位置\r\n        this.dragData.x = x\r\n        this.dragData.y = y\r\n        this.dragData.w = w\r\n        this.dragData.h = h\r\n        // 浮动\r\n        if (!this.curResizingGridItemData.float) this.rearrangement()\r\n        // 重新渲染\r\n        this.reRender()\r\n        this.dispatchGridItemResizeEvent(this.curResizingGridItemData)\r\n    }\r\n    /**\r\n     * 触发gridItemResize事件\r\n     */\r\n    handDispatchGridItemResizeEvent: any = 0\r\n    dispatchGridItemResizeEvent(data: GridItemData | undefined | null) {\r\n        clearTimeout(this.handDispatchGridItemResizeEvent)\r\n        // 向外发送resize 事件 60s 防抖\r\n        this.handDispatchGridItemResizeEvent = setTimeout(() => {\r\n            const resize = new CustomEvent(GridItemReizeName, {\r\n                detail: data\r\n            })\r\n            window.dispatchEvent(resize)\r\n        }, 60)\r\n    }\r\n    /**\r\n     * 结束改变大小\r\n     * Resize end\r\n     */\r\n    gridItemResizeEnd() {\r\n        if (!this.edit) return\r\n        this.draggIng = false\r\n        const { x, y, w, h } = this.dragData\r\n        if (!this.curResizingGridItemData) return\r\n        this.curResizingGridItemData.x = x\r\n        this.curResizingGridItemData.y = y\r\n        this.curResizingGridItemData.w = w\r\n        this.curResizingGridItemData.h = h\r\n        delete this.curResizingGridItemData.style\r\n        this.dispatchGridItemResizeEvent({ ...this.curResizingGridItemData })\r\n        this.curResizingGridItemData = null\r\n        this.rearrangement()\r\n        this.transition = false\r\n        this.reRender()\r\n        this.saveCurLayout()\r\n    }\r\n    /**\r\n     * ItemStyle事件\r\n     * @param data GridItemData\r\n     * @returns\r\n     */\r\n    getGridItemStyle(data: GridItemData) {\r\n        // 拖拽时的 占位item 的 z-index\r\n        const ActiveZindex = 888\r\n        // 拖拽底部阴影的z-index\r\n        const DragZInxex = 800\r\n        const FloatZindex = 900\r\n        const css: string[] = []\r\n        // 单个项目的自定义样式\r\n        if (data.activeStyle) {\r\n            const attr: string[] = []\r\n            attr.push(`border-style:${data.activeStyle.borderStyle};`)\r\n            attr.push(`border-width:${data.activeStyle.borderWidth || 0}px;`)\r\n            attr.push(`border-color:${data.activeStyle.borderColor || 'transparent'};`)\r\n            attr.push(`border-radius:${data.activeStyle.borderRadius || 0}px;`)\r\n            css.push(`\r\n                ${attr.join('')}\r\n            `)\r\n            css.push(`background-color:${data.activeStyle.contentColor || 'transparent'};`)\r\n        }\r\n        // 当前活动的样式?\r\n        if (data.style) {\r\n            css.push(`\r\n                transition:none;\r\n                left:${data.style.left}px;\r\n                top:${data.style.top}px;\r\n                z-index:${data.float ? FloatZindex + (data.z || 0) : ActiveZindex};\r\n                width:${data.style.width}px; \r\n                height:${data.style.height}px`)\r\n            return css.join('')\r\n        }\r\n        // 计算当前item的位置 宽高\r\n        const style = {\r\n            left: data.x * this.griddingWidth,\r\n            top: data.y * this.griddingHeight,\r\n            width: data.w * this.griddingWidth,\r\n            height: data.h * this.griddingHeight\r\n        }\r\n        // 设置z-index\r\n        let zIndex = data.z || 0\r\n        if (data.id === DRAG_ID) zIndex = DragZInxex\r\n        if (data.float) zIndex = FloatZindex + (data.z || 0)\r\n\r\n        css.push(`\r\n            left:${style.left}px;\r\n            top:${style.top}px;\r\n            z-index:${zIndex};\r\n            width:${style.width}px; \r\n            height:${style.height}px;`)\r\n\r\n        return css.join('')\r\n    }\r\n    /** 保存Layout */\r\n    saveCurLayout() {\r\n        const jsonstr = JSON.stringify(this.layoutData)\r\n        const json = JSON.stringify(\r\n            JSON.parse(jsonstr).map((item: any) => {\r\n                delete item.selected\r\n                return item\r\n            })\r\n        )\r\n        if (json != this.dataStore[this.dataStoreIndex]) {\r\n            this.dataStoreIndex++\r\n            this.dataStore[this.dataStoreIndex] = json\r\n        }\r\n    }\r\n    animateGridItem(item: GridItemData, w: number = 3, h: number = 2) {\r\n        return new Promise(resolve => {\r\n            let minusW = Math.floor((item.w - w) / 5)\r\n            let minusH = Math.floor((item.h - h) / 5)\r\n            if (minusW < 1) minusW = 1\r\n            if (minusH < 1) minusH = 1\r\n            const animate = () => {\r\n                item.w -= minusW\r\n                item.h -= minusH\r\n                if (item.w < w) {\r\n                    item.w = w\r\n                }\r\n                if (item.h < h) {\r\n                    item.h = h\r\n                }\r\n                this.rearrangement()\r\n                this.reRender()\r\n                if (item.w > w || item.h > h) {\r\n                    window.requestAnimationFrame(() => {\r\n                        animate()\r\n                    })\r\n                } else {\r\n                    resolve(null)\r\n                }\r\n            }\r\n            animate()\r\n        })\r\n    }\r\n    /** 移除GridItem */\r\n    async gridItemClose(event: PointerEvent) {\r\n        const index = this.getGridItemIndex(event.currentTarget)\r\n        const item: GridItemData = this.layoutData[index]\r\n\r\n        await this.animateGridItem(item, 3, 3)\r\n        this.layoutData.splice(index, 1)\r\n        this.transition = false\r\n        this.rearrangement()\r\n        this.reRender()\r\n    }\r\n    /**\r\n     * 关闭菜单\r\n     */\r\n    closeGridItemSubMenu() {\r\n        this.curGridItemSubMenuShow = false\r\n        this.curGridItemSubMenuGridData = null\r\n    }\r\n    /** 移除GridItem */\r\n    async gridItemCloseBySubMenu() {\r\n        if (!this.curGridItemSubMenuGridData) return\r\n        const item: GridItemData = this.curGridItemSubMenuGridData\r\n        const index = this.layoutData.findIndex(a => a.id === item.id)\r\n        await this.animateGridItem(item, 3, 3)\r\n        const junkGridItem = this.layoutData.splice(index, 1)[0]\r\n        this.transition = false\r\n        this.closeGridItemSubMenu()\r\n        this.rearrangement()\r\n        this.reRender()\r\n        const emit: any = new Event('removeGridItem')\r\n        emit.detail = junkGridItem\r\n        this.dispatchEvent(emit)\r\n    }\r\n    getGridItemIndex(target: any) {\r\n        const grid: HTMLElement | null = target?.closest('.grid-item') || null\r\n        return Number(grid?.dataset.index || '0')\r\n    }\r\n    getGridItem(target: any) {\r\n        const index = this.getGridItemIndex(target)\r\n        return this.layoutData[index]\r\n    }\r\n    /**\r\n     * 拖拽开始\r\n     * @param event PointerEvent\r\n     * @returns void\r\n     */\r\n    gridItemDragstart(event: PointerEvent) {\r\n        // 如果不是编辑状态 则不让拖动\r\n        if (!this.edit) return\r\n        // 拖动的元素\r\n        const target1: any = event?.target as any\r\n        const target = target1.parentElement as HTMLElement\r\n\r\n        // 更多按钮\r\n        if (!target?.closest('.btn-more')) {\r\n            this.closeGridItemSubMenu()\r\n        }\r\n        // 否则 关闭菜单\r\n        this.closeGridItemSubMenu()\r\n        // 移除默认效果\r\n        event.preventDefault()\r\n        // 获取当前grid item 的数据\r\n        const grid = this.getGridItem(target)\r\n        // 设置当前item 为 当前移动的网格item\r\n        this.curMovingGridItemData = grid\r\n        // 代码保护\r\n        if (!this.curMovingGridItemData) return\r\n        // 当前选中项的位置信息\r\n        const { w, h, x, y, id } = this.curMovingGridItemData\r\n        // 当前移动item的位置信息 转换成像素\r\n        this.movePosition = {\r\n            left: this.curMovingGridItemData.x * this.griddingWidth,\r\n            top: this.curMovingGridItemData.y * this.griddingHeight\r\n        }\r\n        // 记住鼠标按下的位置\r\n        const fixPosition: HtmlPosition = { left: 0, top: 0 }\r\n        fixPosition.left = event.clientX\r\n        fixPosition.top = event.clientY\r\n        // 存储以前的位置\r\n        const oldPosition: HtmlPosition = { left: 0, top: 0 }\r\n        oldPosition.left = this.movePosition.left\r\n        oldPosition.top = this.movePosition.top\r\n        // 如果不是当前选中项 那么 移除选中效果\r\n        this.layoutData.forEach(item => {\r\n            if (item.id !== this.curMovingGridItemData.id) delete item.selected\r\n        })\r\n        // 将当前选中项增加选中效果\r\n        this.curMovingGridItemData.selected = true\r\n        // 同步拖拽项 阴影的位置信息\r\n        this.dragData.w = w\r\n        this.dragData.h = h\r\n        this.dragData.x = x\r\n        this.dragData.y = y\r\n        // 添加拖拽项目动画效果\r\n        this.transition = true\r\n        // 重新渲染\r\n        this.reRender()\r\n        // 拖拽中的事件\r\n        const onDragging: any = (event: PointerEvent) => {\r\n            // 代码保护 如果不是当前移动事件 直接退出\r\n            if (!this.edit || !this.curMovingGridItemData) return\r\n            // 选中当前移动的item\r\n            this.curMovingGridItemData.selected = true\r\n            // 移动中的位置 = 旧位置 + 鼠标移动的距离(px)\r\n            this.movePosition.left = oldPosition.left + (event.clientX - fixPosition.left)\r\n            this.movePosition.top = oldPosition.top + (event.clientY - fixPosition.top)\r\n\r\n            // 拖拽中的阴影\r\n            this.draggIng = true\r\n\r\n            // 当前移动中的item\r\n            const { w, h } = this.curMovingGridItemData\r\n            // 阴影的位置\r\n            this.dragData.w = w\r\n            this.dragData.h = h\r\n\r\n            // 计算当前移动item的高度px/宽度px\r\n            const height = this.curMovingGridItemData.h * this.griddingHeight\r\n            const width = this.curMovingGridItemData.w * this.griddingWidth\r\n\r\n            // 设置当前移动item的样式\r\n            this.curMovingGridItemData.style = {\r\n                width,\r\n                height,\r\n                left: this.movePosition.left,\r\n                top: this.movePosition.top\r\n            }\r\n            // 将px像素值转成 网格数\r\n            const { x, y } = this.calcNearPosition(this.movePosition.left, this.movePosition.top)\r\n\r\n            // 如果是浮动模式 那么 位置在哪里就是哪里\r\n            if (this.curMovingGridItemData.float) {\r\n                this.dragData.x = x\r\n                this.dragData.y = y\r\n            } else {\r\n                // 获取最近的空间 将阴影移动到该位置\r\n                const newPos = this.getNearEmptyPosition({\r\n                    x,\r\n                    y,\r\n                    w,\r\n                    h,\r\n                    id: '9999',\r\n                    z: 0\r\n                })\r\n                if (newPos) {\r\n                    this.dragData.x = newPos.x\r\n                    this.dragData.y = newPos.y\r\n                }\r\n            }\r\n\r\n            if (!this.curMovingGridItemData?.float) this.rearrangement()\r\n            this.reRender()\r\n        }\r\n        // 拖拽结束事件\r\n        const onDragEnd: any = () => {\r\n            if (!this.edit) return\r\n            this.draggIng = false\r\n            if (!this.curMovingGridItemData) return\r\n            delete this.curMovingGridItemData.style\r\n            this.curMovingGridItemData.x = this.dragData.x\r\n            this.curMovingGridItemData.y = this.dragData.y\r\n            this.curMovingGridItemData = null\r\n            // 关闭动画\r\n            this.transition = false\r\n            // 重新渲染\r\n            this.reRender()\r\n            // 保存layout 数据\r\n            this.saveCurLayout()\r\n            // 移除禁止选中文字\r\n            document.body.removeAttribute('onselectstart')\r\n            // 移除监听事件\r\n            window.removeEventListener('mousemove', onDragging)\r\n            window.removeEventListener('mouseup', onDragEnd)\r\n        }\r\n        // 将dome 禁止选中文字\r\n        document.body.setAttribute('onselectstart', 'return false')\r\n        // 监听鼠标移动事件\r\n        window.addEventListener('mousemove', onDragging)\r\n        // 监听鼠标松开事件\r\n        window.addEventListener('mouseup', onDragEnd)\r\n    }\r\n    /**\r\n     * 转换成的GidPosition\r\n     * @param left style.left\r\n     * @param top style.top\r\n     * @returns {x,y}\r\n     */\r\n    calcNearPosition = (left: number, top: number): GridPosition => {\r\n        const x = Math.round(left / this.griddingWidth)\r\n        const y = Math.round(top / this.griddingHeight)\r\n        return { x, y }\r\n    }\r\n\r\n    /**\r\n     * 获取最近的空间\r\n     * @param grid :GridItemData\r\n     * @returns {x,y}\r\n     */\r\n    getNearEmptyPosition(grid: GridItemData) {\r\n        const overMax = 10\r\n        let { x, y } = grid\r\n        const { w, h } = grid\r\n        // 不能小于一个 item 间距\r\n        if (y < this.gridMargin) y = this.gridMargin\r\n        if (x < this.gridMargin) x = this.gridMargin\r\n        // x = x < this.gridMargin ? this.gridMargin : x\r\n        // 宽度不能超出 整个布局的 宽度\r\n        x =\r\n            x + w + this.gridMargin > Math.floor(this.stageWidth / this.griddingWidth)\r\n                ? Math.floor(this.stageWidth / this.griddingWidth) - this.gridMargin - w\r\n                : x\r\n        // 获取当前与当前 item 重叠交叉的 gridItem list\r\n        const overList = this.findOverlapItem(this.layoutData, x, y, w, h, [\r\n            this.dragData.id,\r\n            this.curActiveGridItem.id\r\n        ])\r\n        overList.forEach(overItem => {\r\n            // 交叉部分的宽度\r\n            const overW =\r\n                w +\r\n                overItem.w -\r\n                (Math.max(x + w, overItem.x + overItem.w) - Math.min(x, overItem.x))\r\n            // 交叉部分的高度\r\n            const overH =\r\n                h +\r\n                overItem.h -\r\n                (Math.max(y + h, overItem.y + overItem.h) - Math.min(y, overItem.y))\r\n            if (overH < overW) {\r\n                if (overH < overMax && overH < overItem.h && overH < h) {\r\n                    if (y < overItem.y) {\r\n                        y = overItem.y - h - this.gridMargin\r\n                        if (y < this.gridMargin) {\r\n                            y = this.gridMargin\r\n                        }\r\n                    } else {\r\n                        y = overItem.y + overItem.h + this.gridMargin\r\n                    }\r\n                }\r\n            } else {\r\n                if (overW < overMax && overW < overItem.w && overW < w) {\r\n                    if (x < overItem.x && overItem.x - w > this.gridMargin) {\r\n                        x = overItem.x - w - this.gridMargin\r\n                    } else if (\r\n                        overItem.x + overItem.w + w + this.gridMargin <\r\n                        Math.floor(this.stageWidth / this.griddingWidth)\r\n                    ) {\r\n                        x = overItem.x + overItem.w + this.gridMargin\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return { x, y }\r\n    }\r\n\r\n    /** 无用代码\r\n     * 返回 上次的layout\r\n     * @returns JSON\r\n     */\r\n    getBackLayout = () => {\r\n        this.dataStoreIndex--\r\n        return this.dataStore[this.dataStoreIndex]\r\n    }\r\n    /**\r\n     * // 无用代码\r\n     * 打开上次的保存layout\r\n     */\r\n    backLayout = () => {\r\n        const data = this.getBackLayout()\r\n        if (data) {\r\n            this.layoutData = JSON.parse(data)\r\n        }\r\n    }\r\n    /** 调试代码 无用 下一个layout */\r\n    getForwardLayout = () => {\r\n        this.dataStoreIndex =\r\n            this.dataStore.length - 1 > this.dataStoreIndex\r\n                ? this.dataStoreIndex + 1\r\n                : this.dataStore.length - 1\r\n        return this.dataStore[this.dataStoreIndex]\r\n    }\r\n    /**\r\n     * 调试代码 无用\r\n     * 打开下一步的layout\r\n     */\r\n    forwardLayout = () => {\r\n        const data = this.getForwardLayout()\r\n        if (data) {\r\n            this.layoutData = JSON.parse(data)\r\n        }\r\n    }\r\n    /**\r\n     * 调试代码, 无用\r\n     * 关闭事件\r\n     */\r\n    close = () => {\r\n        const emit: any = new Event('close')\r\n        emit.detail = this.layoutData\r\n        this.dispatchEvent(emit)\r\n    }\r\n    /**\r\n     * 测试代码 无用\r\n     */\r\n    save = () => {\r\n        const emit: any = new Event('save')\r\n        emit.detail = this.layoutData\r\n        this.dispatchEvent(emit)\r\n    }\r\n\r\n    /**\r\n     * 复杂\r\n     * @returns\r\n     */\r\n    gridItemCopyBySubMenu = () => {\r\n        if (!this.curGridItemSubMenuGridData) return\r\n        const emit: any = new Event('gridItemCopy')\r\n        emit.detail = this.curGridItemSubMenuGridData\r\n        this.closeGridItemSubMenu()\r\n        this.reRender()\r\n        this.dispatchEvent(emit)\r\n    }\r\n\r\n    /**\r\n     * GridLayout的点击事件\r\n     * @param event\r\n     * @returns\r\n     */\r\n    onGridLayoutClick(event: any) {\r\n        if (event?.target?.closest('.toolbar')) return\r\n        if (event?.target?.closest('.grid-item')) return\r\n        if (event?.target?.closest('[slot]')) return\r\n        if (event?.target?.closest('.btn-more')) return\r\n        if (event?.target?.closest('.box-menu')) return\r\n\r\n        // 删除所有选中\r\n        this.layoutData.forEach(item => {\r\n            delete item.selected\r\n        })\r\n        // this.styleMapEditing = false\r\n        // 关闭编辑下拉框\r\n        this.closeGridItemSubMenu()\r\n        // 重新渲染\r\n        this.reRender()\r\n    }\r\n\r\n    /**\r\n     * 获取GridItem的TOP y坐标 检查上方有没有空间,如果有往上挪动一点\r\n     * @param dataList\r\n     * @param grid\r\n     * @param exceptIds\r\n     * @returns\r\n     */\r\n    getGridItemTopY(dataList: GridItemData[], grid: ItemData, exceptIds: any[]) {\r\n        const { x, h, w } = grid\r\n        let { y } = grid\r\n        let item: any = this.findBigestOverlapItem(\r\n            dataList,\r\n            x,\r\n            y - this.gridMargin,\r\n            w,\r\n            h,\r\n            exceptIds\r\n        )\r\n        while (!item) {\r\n            // 一个网格一个网格的找\r\n            y = y - this.gridMargin\r\n            if (y <= this.gridMargin) {\r\n                // 当间距已经最小了的时候 停止查找,当前项目停在这个位置\r\n                y = this.gridMargin\r\n                return { x, y }\r\n            }\r\n            // 每次往上挪一点  如果没有重叠的就继续找,找到有重叠的为止 (y - this.gridMargin)这个位置有重叠就返回y\r\n            item = this.findBigestOverlapItem(dataList, x, y - this.gridMargin, w, h, exceptIds)\r\n        }\r\n        return { x, y }\r\n    }\r\n    /**\r\n     * 无用代码,暂时保留\r\n     * 计算两项交叉面积\r\n     * @param data1\r\n     * @param data2\r\n     * @returns\r\n     */\r\n    calcOverArea(data1: ItemData, data2: ItemData) {\r\n        const overX1 = Math.max(data1.x, data2.x)\r\n        const overX2 = Math.min(data1.x + data1.w, data2.x + data2.w)\r\n        const overW = overX2 - overX1\r\n        const overY1 = Math.max(data1.y, data2.y)\r\n        const overY2 = Math.min(data1.y + data1.h, data2.y + data1.h)\r\n        const overH = overY2 - overY1\r\n        const overArea = overH * overW\r\n        return overArea\r\n    }\r\n\r\n    /**\r\n     * 排序上面有空白的地方\r\n     * @param list\r\n     */\r\n    sortTopSpace(list: GridItemData[]) {\r\n        // const maxWidth = this.maxGridItemWidthCount\r\n        // const maxHeight = Math.round(this.calcStageActualHeight / this.griddingHeight)\r\n        // const space = 10\r\n        // for (let sx = this.gridMargin; sx < maxWidth; sx += space) {\r\n        //     for (let sy = this.gridMargin; sy < maxHeight; sy += space) {\r\n        //         const w = space\r\n        //         const h = space\r\n        //         const item = this.findBigestOverlapItem(list, sx, sy, w, h, [\r\n        //             this.curActiveGridItem?.id\r\n        //         ])\r\n        //         if (item) {\r\n        //             const { x, y } = this.getGridItemTopY(list, item, [\r\n        //                 this.curActiveGridItem?.id,\r\n        //                 item.id\r\n        //             ])\r\n        //             item.x = x\r\n        //             item.y = y\r\n        //             sy = item.y + item.h\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // 将当前拖动的item和 浮动的item 排除\r\n        let dataList = list.filter(item => item.id !== this.curActiveGridItem?.id && !item.float)\r\n        dataList = dataList.sort((a: GridItemData, b: GridItemData) => {\r\n            if (a.y < b.y) {\r\n                return -1\r\n            } else if (a.y == b.y) {\r\n                //拖拽Grid优先排最前面\r\n                if (a.id === DRAG_ID) return -1\r\n                if (b.id === DRAG_ID) return 1\r\n                if (a.x < b.x) return -1\r\n                return 1\r\n            } else {\r\n                return 1\r\n            }\r\n        })\r\n        for (let i = 0; i < dataList.length; i++) {\r\n            const item = dataList[i]\r\n            // 拿到上方空白处的y网格数\r\n            const { y } = this.getGridItemTopY(list, item, [this.curActiveGridItem?.id, item.id])\r\n            // 如果y比当前item的y小 name 就将 y 赋值给 item.y 将 当前item上移\r\n            if (y < item.y) {\r\n                item.y = y\r\n                // 然后递归计算\r\n                this.sortTopSpace(list)\r\n                return\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 排序底部重叠的地方\r\n     * @param list\r\n     */\r\n    sortBottomOver(list: GridItemData[]) {\r\n        let dataList = list.filter(item => item.id !== this.curActiveGridItem?.id)\r\n        dataList = dataList.sort((a: GridItemData, b: GridItemData) => {\r\n            if (a.y < b.y) {\r\n                return -1\r\n            } else if (a.y == b.y) {\r\n                //拖拽Grid优先排最前面\r\n                if (a.id === DRAG_ID) return -1\r\n                if (b.id === DRAG_ID) return 1\r\n                if (a.x < b.x) return -1\r\n                return 1\r\n            } else {\r\n                return 1\r\n            }\r\n        })\r\n\r\n        // 遍历每个item\r\n        for (const item of dataList) {\r\n            // 浮动跳过\r\n            if (item.float) {\r\n                continue\r\n            }\r\n            // 当前移动的项目跳过\r\n            if (this.curMovingGridItemData?.id === item.id) {\r\n                continue\r\n            }\r\n            this.pressDownOver(list, item)\r\n        }\r\n    }\r\n    /**\r\n     * 往下压\r\n     * @param list\r\n     * @param item\r\n     * 将每个item 与 其他的item 一个个比较 有无重叠的部分\r\n     */\r\n    pressDownOver(list: GridItemData[], item: GridItemData) {\r\n        const { id, x, y, w, h } = item\r\n        // 与item 重叠的 gridItemList\r\n        const newList = this.findOverlapItem(list, x, y, w, h, [\r\n            id,\r\n            // this.dragData?.id,\r\n            this.curActiveGridItem?.id\r\n        ])\r\n\r\n        // 如果有重叠\r\n        if (newList.length) {\r\n            for (let i = 0; i < newList.length; i++) {\r\n                // 将重叠项目往下压\r\n                newList[i].y = y + h + this.gridMargin\r\n                // 递归 直到所有都没有重叠为止\r\n                this.pressDownOver(list, newList[i])\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重新排序 将网格重新组合排列\r\n     */\r\n    rearrangement() {\r\n        let list = [...this.layoutData]\r\n        if (this.curActiveGridItem) {\r\n            list = [...list, this.dragData]\r\n        }\r\n        this.sortBottomOver(list)\r\n        this.sortTopSpace(list)\r\n\r\n        this.layoutData = list\r\n            .filter(item => {\r\n                if (item.id === DRAG_ID) {\r\n                    this.dragData = item\r\n                    return false\r\n                }\r\n                return true\r\n            })\r\n            .map(item => {\r\n                if (item.id === this.curActiveGridItem?.id) {\r\n                    return this.curActiveGridItem\r\n                }\r\n                return item\r\n            })\r\n        this.reRender()\r\n    }\r\n    /**\r\n     * 浮动 向上一级\r\n     * @returns\r\n     */\r\n    setZindexUp() {\r\n        // 首先关闭菜单\r\n        this.closeGridItemSubMenu()\r\n        if (!this.curSelectGridItem?.float) {\r\n            // 如果当前选中的item 不是浮动, 那么重新渲染\r\n            this.reRender()\r\n            return\r\n        }\r\n        // 找出浮动的item 列表\r\n        let floatGridItems = this.layoutData.filter(item => item.float)\r\n        // 将浮动的item 列表排序\r\n        floatGridItems = floatGridItems.sort((a: any, b: any) => a.z - b.z)\r\n        // 将排序后的浮动的item 的 zIndex 重新赋值\r\n        floatGridItems.forEach((item, i) => {\r\n            item.z = i\r\n        })\r\n        //找到当前选中的那个item 的 index\r\n        const index = floatGridItems.findIndex(item => item.id === this.curSelectGridItem?.id)\r\n        // 如果他是最后一个 即 浮动层级最高的那个 那么不用处理直接渲染\r\n        if (index >= floatGridItems.length - 1) {\r\n            this.reRender()\r\n            return\r\n        }\r\n        // 删除 当前选中的item\r\n        const item = floatGridItems.splice(index, 1)\r\n        // 将当前的item 插入到 下一个位置\r\n        floatGridItems.splice(index + 1, 0, item[0])\r\n        // 重新分配zIndex\r\n        floatGridItems.forEach((item, i) => {\r\n            item.z = i\r\n        })\r\n        // 重新渲染\r\n        this.reRender()\r\n    }\r\n\r\n    /**\r\n     * 浮动 向下一级\r\n     * @returns\r\n     */\r\n    setZindexDown() {\r\n        // 关闭菜单\r\n        this.closeGridItemSubMenu()\r\n        if (!this.curSelectGridItem?.float) {\r\n            // 如果当前选中的item 不是浮动, 那么重新渲染\r\n            this.reRender()\r\n            return\r\n        }\r\n        let floatGridItems = this.layoutData.filter(item => item.float)\r\n        // 浮动排序\r\n        floatGridItems = floatGridItems.sort((a: any, b: any) => a.z - b.z)\r\n        // 重新赋值\r\n        floatGridItems.forEach((item, i) => {\r\n            item.z = i\r\n        })\r\n        // 查找当前选中的item 的 index\r\n        const index = floatGridItems.findIndex(item => item.id === this.curSelectGridItem?.id)\r\n        // 如果是第一个的话 不做处理 已经是最底层了\r\n        if (index === 0) {\r\n            this.reRender()\r\n            return\r\n        }\r\n        // 取出当前选中的item\r\n        const item = floatGridItems.splice(index, 1)\r\n        // 插入到前一个位置\r\n        floatGridItems.splice(index - 1, 0, item[0])\r\n        // 重新分配zIndex\r\n        floatGridItems.forEach((item, i) => {\r\n            item.z = i\r\n        })\r\n        // 关闭菜单 重新渲染\r\n        this.closeGridItemSubMenu()\r\n        this.reRender()\r\n    }\r\n\r\n    /**\r\n     *  无用代码,暂时保留\r\n     * @returns\r\n     */\r\n    getLayoutDefaultGridItemStyle(): any {\r\n        const style: string[] = ['.grid-layout > .grid-item {']\r\n        if (this.layoutDefaultGridStyle.borderRadius) {\r\n            style.push(` border-radius: ${this.layoutDefaultGridStyle.borderRadius}px;`)\r\n        }\r\n        if (this.layoutDefaultGridStyle.borderStyle) {\r\n            style.push(`border-style: ${this.layoutDefaultGridStyle.borderStyle};`)\r\n            style.push(`border-color: ${this.layoutDefaultGridStyle.borderColor || 'transparent'};`)\r\n            style.push(`border-width: ${this.layoutDefaultGridStyle.borderWidth}px;`)\r\n        }\r\n\r\n        if (this.layoutDefaultGridStyle.contentColor)\r\n            style.push(`background-color: ${this.layoutDefaultGridStyle.contentColor};`)\r\n        style.push('}')\r\n        return html`<style>\r\n            ${style.join('')}\r\n        </style>`\r\n    }\r\n\r\n    /**\r\n     * 打开样式配置\r\n     * @returns\r\n     */\r\n    openSetStyleBySubMenu() {\r\n        if (!this.curGridItemSubMenuGridData) return\r\n        const emit: any = new Event('openSetActiveStyle')\r\n        emit.detail = this.curGridItemSubMenuGridData\r\n        this.closeGridItemSubMenu()\r\n        this.reRender()\r\n        this.dispatchEvent(emit)\r\n    }\r\n    /**\r\n     * 弹出右上角的菜单\r\n     * @returns\r\n     */\r\n    openConfigSetBySubMenu() {\r\n        if (!this.curGridItemSubMenuGridData) return\r\n        const emit: any = new Event('openConfigSet')\r\n        emit.detail = this.curGridItemSubMenuGridData\r\n        this.closeGridItemSubMenu()\r\n        this.reRender()\r\n        this.dispatchEvent(emit)\r\n    }\r\n\r\n    /**\r\n     * 当前活动的GridItem\r\n     *\r\n     */\r\n    get curActiveGridItem() {\r\n        return this.curMovingGridItemData || this.curResizingGridItemData || null\r\n    }\r\n    /**\r\n     * 当前活动的GridItem style\r\n     */\r\n    get curActiveGridItemStyle() {\r\n        return this.curActiveGridItem?.style\r\n    }\r\n    get curSelectGridItem(): GridItemData | undefined {\r\n        return this.layoutData.find(item => item.selected)\r\n    }\r\n    /**\r\n     * 选中的UserStyle;\r\n     */\r\n    get curGridItemSubMenuGridDataActiveStyle(): ActiveGridItemStyleType | undefined {\r\n        if (!this.curGridItemSubMenuGridData) return\r\n        if (!this.curGridItemSubMenuGridData.activeStyle) {\r\n            const astye: ActiveGridItemStyleType = {\r\n                titleStyleVisible: false,\r\n                borderStyle: '',\r\n                borderWidth: 0,\r\n                borderColor: '',\r\n                borderRadius: 0,\r\n                titleColor: '',\r\n                contentColor: '',\r\n                // enbled: true,\r\n                isFloat: this.curGridItemSubMenuGridData.float || false\r\n            }\r\n            this.curGridItemSubMenuGridData.activeStyle = astye\r\n        }\r\n        return this.curGridItemSubMenuGridData.activeStyle\r\n    }\r\n    /**\r\n     * 计算的舞台虚拟高度 网格数\r\n     */\r\n    get calcStageVirtualHeight(): number {\r\n        let list = [...this.layoutData]\r\n        if (this.dragData) {\r\n            list = [this.dragData, ...list]\r\n        }\r\n        let h: number = 0\r\n        list.forEach(item => {\r\n            h = h < item.y + item.h ? item.y + item.h : h\r\n        })\r\n        h = h + this.gridMargin\r\n        return h\r\n    }\r\n    /**\r\n     * 计算的舞台实际高度\r\n     */\r\n    get calcStageActualHeight(): number {\r\n        return this.calcStageVirtualHeight * this.griddingHeight\r\n    }\r\n    /**\r\n     * 无用代码\r\n     * 关闭\r\n     */\r\n    dialogClose() {\r\n        this.showDialogGridStyle = false\r\n        this.closeGridItemSubMenu()\r\n        this.reRender()\r\n    }\r\n    /**\r\n     * resize事件\r\n     */\r\n    boxResizeTime: any = 0\r\n    boxResize() {\r\n        if (this.boxResizeTime) clearTimeout(this.boxResizeTime)\r\n        this.boxResizeTime = setTimeout(() => {\r\n            this.stageWidth = this.getBoundingClientRect().width - this.defaultRightMargin\r\n            this.reRender()\r\n\r\n            this.dispatchGridItemResizeEvent(null)\r\n        }, 300)\r\n    }\r\n    /**\r\n     * 绑定事件\r\n     */\r\n    bindHnd: { [s: string]: any } = {}\r\n    bind(obj: any, type: string) {\r\n        obj.bindHnd[type] = () => {\r\n            const fun: Function = obj[type]\r\n            fun()\r\n        }\r\n        return obj.bindHnd[type]\r\n    }\r\n    /**\r\n     * 无用代码\r\n     * @param e\r\n     */\r\n    WcVueGridStyleChange(e: any) {\r\n        const { detail }: { detail: any[] } = e\r\n        const style: { gridStyle: any; globalGridStyle: any } = detail[0]\r\n        if (this.curGridItemSubMenuGridData) {\r\n            this.curGridItemSubMenuGridData.activeStyle = { ...style.gridStyle }\r\n        }\r\n        this.layoutDefaultGridStyle = { ...style.globalGridStyle }\r\n    }\r\n    /**\r\n     * 生命周期--初始化\r\n     */\r\n    connectedCallback() {\r\n        // 固定写法 调用父类的生命周期\r\n        super.connectedCallback()\r\n        // 默认样式初始化\r\n        this.layoutDefaultGridStyle.borderRadius =\r\n            this.layoutDefaultGridStyle.borderRadius !== undefined\r\n                ? this.layoutDefaultGridStyle.borderRadius\r\n                : 3\r\n        this.layoutDefaultGridStyle.borderColor =\r\n            this.layoutDefaultGridStyle.borderColor !== undefined\r\n                ? this.layoutDefaultGridStyle.borderColor\r\n                : '#c3c3c3'\r\n        this.layoutDefaultGridStyle.borderWidth =\r\n            this.layoutDefaultGridStyle.borderWidth !== undefined\r\n                ? this.layoutDefaultGridStyle.borderWidth\r\n                : 1\r\n        this.layoutDefaultGridStyle.borderStyle =\r\n            this.layoutDefaultGridStyle.borderStyle !== undefined\r\n                ? this.layoutDefaultGridStyle.borderStyle\r\n                : 'solid'\r\n        this.layoutDefaultGridStyle.titleColor =\r\n            this.layoutDefaultGridStyle.titleColor !== undefined\r\n                ? this.layoutDefaultGridStyle.titleColor\r\n                : '#fff'\r\n        this.layoutDefaultGridStyle.contentColor =\r\n            this.layoutDefaultGridStyle.contentColor !== undefined\r\n                ? this.layoutDefaultGridStyle.contentColor\r\n                : '#fff'\r\n        // getBoundingClientRect 原生方法 获取目标dom 的 宽高位置信息\r\n        const curRect = this.getBoundingClientRect()\r\n        // 设置宽高\r\n        this.stageWidth = curRect.width - this.defaultRightMargin\r\n        this.stageHeight = curRect.height\r\n        const layoutHeight = curRect.height\r\n        // 每一行默认占四个拖拽项目,中间三个间隙 + 两头间隙 一共五个间隙\r\n        // 所以此处((this.maxGridItemWidthCount - this.gridMargin) / 4 就是每一个网格加上间隙的网格树\r\n        // 减去间隙 就是每个 拖拽项目 所占的网格数\r\n        this.defaultGridItemWidth =\r\n            Math.floor((this.maxGridItemWidthCount - this.gridMargin) / 4) - this.gridMargin\r\n        // dom总高度/每个网格所占的像素值 获取整屏网格数\r\n        this.maxGridItemHeightCount = Math.floor(layoutHeight / this.griddingHeight)\r\n        // 用整屏网格数减去间隙 获取每个网格所占的像素值 (通上 宽度计算)\r\n        // 得到每个默认拖拽项目的高度 所占的网格数\r\n        this.defaultGridItemHeight =\r\n            Math.floor((this.maxGridItemHeightCount - this.gridMargin) / 4) - this.gridMargin\r\n        // 看是否禁止滚动条\r\n        this.style.overflowY = this.isDisableScrollBars ? 'hidden' : 'auto'\r\n        // 监听窗口大小变化\r\n        window.addEventListener('resize', this.bind(this, 'boxResize'))\r\n    }\r\n    /**\r\n     * 生命周期--销毁\r\n     */\r\n    disconnectedCallback() {\r\n        window.removeEventListener('resize', this.bindHnd['boxResize'])\r\n    }\r\n\r\n    /**\r\n     *  工具栏\r\n     */\r\n    onCLickTool(event: any) {\r\n        const target = event.target\r\n        // 获取dom 元素 的 位置信息\r\n        const rect = target.getBoundingClientRect()\r\n        const parentRect = this.shadowRoot?.firstElementChild?.getBoundingClientRect() || {\r\n            left: 0,\r\n            top: 0,\r\n            width: this.stageWidth,\r\n            height: this.calcStageActualHeight\r\n        }\r\n        // 设置弹出菜单的位置\r\n        this.curGridItemSubMenuPos.x = rect.left - parentRect.left + rect.width + 3\r\n        this.curGridItemSubMenuPos.y = rect.top - parentRect.top + rect.height + 3\r\n        // 显示菜单\r\n        this.curGridItemSubMenuShow = true\r\n        this.curGridItemSubMenuGridData = this.getGridItem(event.currentTarget)\r\n        // 移除其它的选中效果\r\n        this.layoutData.forEach(item => {\r\n            delete item.selected\r\n        })\r\n        // 当前弹出菜单 的item 选中的效果\r\n        this.curGridItemSubMenuGridData.selected = true\r\n        this.reRender()\r\n    }\r\n    /**\r\n     * 获取title\r\n     */\r\n    getItemTitle(itemId: string) {\r\n        const item: any = this.headerConfigList.find((itemConfig: any) => itemConfig.id === itemId)\r\n        const panelOptions = item?.PanelOptions\r\n\r\n        return panelOptions?.title || ''\r\n    }\r\n    /**\r\n     * 渲染方法\r\n     * @returns\r\n     */\r\n    render() {\r\n        const curRect = this.getBoundingClientRect()\r\n        // 预留有滚动条的宽度\r\n        this.stageWidth = curRect.width - this.defaultRightMargin\r\n        this.stageHeight = curRect.height\r\n        // 展示页面\r\n        return html`<div class=\"grid-layout\" @click=\"${this.onGridLayoutClick}\">\r\n                <!-- 如果有滚动条,那么需要加上虚拟高度把页面撑开 -->\r\n                <div class=\"grid-sitting\" style=\"height:${this.calcStageActualHeight}px;\"></div>\r\n                ${this.edit\r\n                ? html`\r\n                          <!-- 测试 开发 的工具栏 -->\r\n                          <div class=\"toolbar\" hide=\"${this.hideToolbar}\">\r\n                              <i class=\"el-icon add\" @click=\"${this.addGridItem}\">\r\n                                  <!--[-->\r\n                                  ${ADD_SVG}\r\n                                  <!--]-->\r\n                              </i>\r\n                              <i class=\"el-icon back\" @click=\"${this.backLayout}\">\r\n                                  <!--[-->\r\n                                  ${BACK_LAYOUT}\r\n                                  <!--]-->\r\n                              </i>\r\n                              <i class=\"el-icon forward\" @click=\"${this.forwardLayout}\">\r\n                                  <!--[-->\r\n                                    ${FORWARD_LAYOUT}\r\n                                  <!--]-->\r\n                              </i>\r\n                              <i class=\"el-icon save\" @click=\"${this.save}\">\r\n                                  <!--[-->\r\n                                 ${SAVE_LAYOUT}\r\n                                  <!--]-->\r\n                              </i>\r\n                              <i class=\"el-icon close\" @click=\"${this.close}\">\r\n                                  <!--[-->\r\n                                  ${CLOSE_LAYOUT}\r\n                                  <!--]-->\r\n                              </i>\r\n                          </div>\r\n                          ${this.showGridItemMenu()}\r\n                      `\r\n                : ''}\r\n                <!-- 拖拽项目渲染 -->\r\n                ${this.layoutData.map((item, i) => {\r\n                    return html`\r\n                        <div\r\n                            class=\"grid-item\"\r\n                            data-index=\"${i}\"\r\n                            selected=\"${item.selected || false}\"\r\n                            float=\"${item.float || false}\"\r\n                            edit=\"${this.edit}\"\r\n                            style=\"${this.getGridItemStyle(item)}\"\r\n                            transition=\"${this.transition}\"\r\n                            lightning-style=\"${this.lightningId === String(item.id)}\"\r\n                        >\r\n                            <div class=\"head-tool\" @mousedown=\"${this.gridItemDragstart}\">\r\n                                <div>\r\n                                    <div class=\"title_cls\">\r\n                                        ${TITLE_SVG}\r\n                                        <div style=\"margin-left: 5px;\">\r\n                                            ${item.activeStyle?.titleStyleVisible\r\n                                            ? this.getItemTitle(item.id)\r\n                                            : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"tool-btn\" @click=\"${this.onCLickTool}\">\r\n                                    <i class=\"el-icon btn-more\" style=\"font-size: 20px;\">\r\n                                        ${MORE_SVG}\r\n                                    </i>\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"height: calc(100% - 36px);\">\r\n                                <slot name=\"${item.slot || ''}\"></slot>\r\n                            </div>\r\n                            <!-- 编辑状态不让点击里面的元素 -->\r\n                            <!-- ${this.edit ? html`<div class=\"move-bg\"></div>` : ''} -->\r\n                            <!-- 渲染右上角工具菜单 -->\r\n                            ${this.renderToobar()}\r\n                        </div>\r\n                    `\r\n                })}\r\n                <!-- 拖拽中 -->\r\n                ${this.draggIng ? this.drawDragDataHtml() : ''}\r\n            </div>\r\n            <!-- 无用代码,暂时保留 -->\r\n            ${this.showDialog()} ${this.getLayoutDefaultGridItemStyle()} `\r\n    }\r\n    // 工具栏 (三个点 和 右下角的 resize图标)\r\n    renderToobar() {\r\n        if (!this.edit) return ''\r\n        return html`<div\r\n            class=\"resize bottom-right\"\r\n            @mousedown=\"${this.gridItemResizeStart}\"\r\n        ></div>`\r\n    }\r\n    // 编辑菜单漂浮窗\r\n    showGridItemMenu() {\r\n        return html`\r\n            <div\r\n                class=\"box-menu ${this.curGridItemSubMenuShow ? 'show' : ''}\"\r\n                style=\"left:${this.curGridItemSubMenuPos.x}px;top:${this.curGridItemSubMenuPos.y}px\"\r\n            >\r\n                <div class=\"menu-item\" @click=\"${this.openConfigSetBySubMenu}\">\r\n                    <i class=\"el-icon\">\r\n                        <!--[-->\r\n                        ${EDIT_SVG}\r\n                        <!--]-->\r\n                    </i>\r\n                    <span class=\"el-label\">${this.i18n.t('edit', true)}</span>\r\n                </div>\r\n                <div class=\"menu-item\" @click=\"${this.openSetStyleBySubMenu}\">\r\n                    <i class=\"el-icon\">\r\n                        <!--[-->\r\n                        ${STYLE_SVG}\r\n                        <!--]-->\r\n                    </i>\r\n                    <span class=\"el-label\">${this.i18n.t('style', true)}</span>\r\n                </div>\r\n                <div class=\"menu-item\" @click=\"${this.gridItemCloseBySubMenu}\">\r\n                    <i class=\"el-icon close grid-item-close\" style=\"font-size:20px;\">\r\n                        <!--[-->\r\n                        ${DELETE_SVG}\r\n                        <!--]-->\r\n                    </i>\r\n                    <span class=\"el-label\">${this.i18n.t('delete', true)}</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item\"\r\n                    @click=\"${this.setZindexUp}\"\r\n                    style=\"display:${this.curSelectGridItem?.float ? 'flex' : 'none'}\"\r\n                >\r\n                    <i class=\"el-icon\">\r\n                        <!--[-->\r\n                        ${ZINDEX_UP_SVG}\r\n                        <!--]-->\r\n                    </i>\r\n                    <span class=\"el-label\">${this.i18n.t('upperFloor', true)}</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item\"\r\n                    @click=\"${this.setZindexDown}\"\r\n                    style=\"display:${this.curSelectGridItem?.float ? 'flex' : 'none'}\"\r\n                >\r\n                    <i class=\"el-icon\">\r\n                        <!--[-->\r\n                        ${ZINDEX_DOWN_SVG}\r\n                        <!--]-->\r\n                    </i>\r\n                    <span class=\"el-label\">${this.i18n.t('nextFloor', true)}</span>\r\n                </div>\r\n                <div class=\"menu-item\" @click=\"${this.gridItemCopyBySubMenu}\">\r\n                    <i class=\"el-icon\">\r\n                        <!--[-->\r\n                        ${DELETE_LAYOUT_SVG}\r\n                        <!--]-->\r\n                    </i>\r\n                    <span class=\"el-label\">${this.i18n.t('copy', true)}</span>\r\n                </div>\r\n            </div>\r\n        `\r\n    }\r\n    // 无用代码\r\n    showDialog() {\r\n        if (!this.showDialogGridStyle) return ''\r\n        return html`<div class=\"dialog\" open>\r\n            <div class=\"style-dialog\">\r\n                <!-- <wc-vue-grid-style\r\n                    global-config=${JSON.stringify(this.layoutDefaultGridStyle)}\r\n                    config=${JSON.stringify(this.curGridItemSubMenuGridDataActiveStyle)}\r\n                    @change=${this.WcVueGridStyleChange}\r\n                    @close=${this.dialogClose}\r\n                ></wc-vue-grid-style> -->\r\n                <div class=\"head\">Style</div>\r\n                <i class=\"el-icon close\" @click=\"${this.dialogClose}\">\r\n                    <!--[-->\r\n                    <svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z\"\r\n                        ></path>\r\n                    </svg>\r\n                    <!--]-->\r\n                </i>\r\n            </div>\r\n        </div>`\r\n    }\r\n    static styles = css`\r\n        :host {\r\n            display: block;\r\n            padding: 0px;\r\n            height: 100%;\r\n            overflow-x: hidden;\r\n        }\r\n        :host::-webkit-scrollbar {\r\n            width: 8px;\r\n            background: #b3b3b3;\r\n        }\r\n        :host::-webkit-scrollbar-thumb {\r\n            width: 8px;\r\n            background: #767676;\r\n            border-radius: 5px;\r\n        }\r\n        :host::-webkit-scrollbar-track {\r\n            background: transparent;\r\n            border-radius: 0px;\r\n        }\r\n        .grid-layout {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .toolbar {\r\n            position: absolute;\r\n            right: 5px;\r\n            top: 5px;\r\n            padding: 2px 3px;\r\n            z-index: 999999;\r\n            display: flex;\r\n            background: #000;\r\n            box-shadow: 2px 2px 5px #000;\r\n            border-radius: 3px;\r\n            border: 1px solid rgb(103 103 103);\r\n        }\r\n        .toolbar[hide='true'] {\r\n            display: none;\r\n        }\r\n        .toolbar.vertical {\r\n            top: 20%;\r\n            right: 5px;\r\n            flex-flow: column;\r\n        }\r\n        .toolbar .el-icon svg {\r\n            width: 18px;\r\n            height: 18px;\r\n        }\r\n        .toolbar .el-icon {\r\n            cursor: pointer;\r\n            margin: 3px 3px;\r\n            border: 1px solid #dbdbdb;\r\n            border-radius: 3px;\r\n            padding: 3px;\r\n            display: inline-flex;\r\n            width: 18px;\r\n            height: 18px;\r\n            background-color: #fff;\r\n            color: #333;\r\n        }\r\n        .toolbar .el-icon:hover {\r\n            background-color: #4097e4;\r\n            color: #fff;\r\n            opacity: 0.7;\r\n        }\r\n\r\n        .toolbar .el-icon[active='true'] {\r\n            background-color: #4097e4;\r\n            color: #fff;\r\n        }\r\n        .toolbar .el-icon:active {\r\n            background-color: rgb(131 177 217);\r\n            color: #fff;\r\n        }\r\n        .toolbar .el-icon.forward svg {\r\n            transform: scaleX(-1);\r\n        }\r\n        .old-data {\r\n            opacity: 0.3;\r\n        }\r\n        .grid-sitting {\r\n            width: 100%;\r\n            top: 0px;\r\n            position: absolute;\r\n            z-index: -1;\r\n        }\r\n        .grid-item {\r\n            display: block;\r\n            position: absolute;\r\n            min-width: 20px;\r\n            min-height: 10px;\r\n            overflow: hidden;\r\n            box-sizing: border-box;\r\n        }\r\n        .grid-item[transition='true'] {\r\n            transition: all 0.3s;\r\n        }\r\n        .grid-item.move {\r\n            cursor: move;\r\n        }\r\n        .grid-item[edit='true'][selected='true'],\r\n        .grid-item[edit='true']:hover {\r\n            outline: rgba(124, 165, 208, 0.2) solid 3px;\r\n        }\r\n        .grid-item[edit='true'][float='true'] {\r\n            box-shadow: rgb(0, 0, 0) 5px 5px 30px -25px;\r\n        }\r\n        .grid-item[float='true'] .tool-box .set-float {\r\n            opacity: 1;\r\n            color: #3250a7;\r\n        }\r\n        .grid-item:hover .resize {\r\n            display: flex;\r\n        }\r\n        .grid-item .bottom-right {\r\n            cursor: se-resize;\r\n            right: 4px;\r\n            bottom: 4px;\r\n            width: 6px;\r\n            height: 6px;\r\n            border-right: 2px solid rgb(195, 190, 190);\r\n            border-bottom: 2px solid rgb(195, 190, 190);\r\n        }\r\n        .grid-item .tool-box {\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            display: flex;\r\n        }\r\n        .grid-item .tool-box:hover {\r\n            opacity: 0.5;\r\n        }\r\n        .grid-item .tool-box .el-icon.btn-more {\r\n            position: relative;\r\n            display: flex;\r\n            height: 3px;\r\n        }\r\n        .grid-item .tool-box .el-icon.btn-more svg {\r\n            color: #1b1d1f;\r\n            width: 16px;\r\n            height: 16px;\r\n        }\r\n        .grid-item .tool-box .el-icon:hover {\r\n            cursor: pointer;\r\n            opacity: 0.6;\r\n        }\r\n        .grid-item .resize > svg {\r\n            color: rgb(160 160 160);\r\n        }\r\n        .grid-item .resize:hover {\r\n            opacity: 0.6;\r\n        }\r\n\r\n        .grid-item[drag='true'] {\r\n            opacity: 0.5;\r\n            background-color: rgb(249, 227, 193);\r\n            box-shadow: none;\r\n            border: none;\r\n            transition: none;\r\n        }\r\n        .grid-item[drag='true'] .close,\r\n        .grid-item[drag='true'] .set-float {\r\n            display: none;\r\n        }\r\n        .grid-item[lightning-style='true'] {\r\n            animation: lightning-style 0.5s;\r\n        }\r\n        @keyframes lightning-style {\r\n            0% {\r\n                box-shadow: 0px 0px 0px -2px #000;\r\n            }\r\n            10% {\r\n                box-shadow: 0px 0px 2px -2px #000;\r\n            }\r\n            20% {\r\n                box-shadow: 0px 0px 4px -2px #000;\r\n            }\r\n            30% {\r\n                box-shadow: 0px 0px 6px -2px #000;\r\n            }\r\n            40% {\r\n                box-shadow: 0px 0px 8px -2px #000;\r\n            }\r\n            50% {\r\n                box-shadow: 0px 0px 10px -2px #000;\r\n            }\r\n            60% {\r\n                box-shadow: 0px 0px 8px -2px #000;\r\n            }\r\n            70% {\r\n                box-shadow: 0px 0px 6px -2px #000;\r\n            }\r\n            80% {\r\n                box-shadow: 0px 0px 4px -5px #000;\r\n            }\r\n            90% {\r\n                box-shadow: 0px 0px 2px -2px #000;\r\n            }\r\n            100% {\r\n                box-shadow: 0px 0px 0px -2px #000;\r\n            }\r\n        }\r\n        .resize {\r\n            position: absolute;\r\n        }\r\n        .toolbar .el-icon.style-update-btn:hover {\r\n            background-color: #fff;\r\n            color: #333;\r\n        }\r\n        .toolbar .el-icon.style-update-btn[active='true'] {\r\n            background-color: #4097e4;\r\n            color: #fff;\r\n        }\r\n        .box-menu {\r\n            display: none;\r\n            min-width: 150px;\r\n            min-height: 32px;\r\n            position: absolute;\r\n            z-index: 1900;\r\n            background-color: #fff;\r\n            box-shadow: 0px 0px 4px 0px rgba(188, 188, 188, 0.5);\r\n            border: 0px solid #e0e0e0;\r\n            border-radius: 6px;\r\n            font-style: normal;\r\n            font-size: 12px;\r\n            color: #1b1d1f;\r\n            transform: translateX(-100%);\r\n            box-sizing: border-box;\r\n            padding: 4px;\r\n        }\r\n        .box-menu.show {\r\n            display: block;\r\n        }\r\n        .box-menu .menu-item {\r\n            display: flex;\r\n            padding: 8px 15px;\r\n            align-items: center;\r\n            cursor: pointer;\r\n            border-radius: 6px;\r\n        }\r\n        .box-menu .menu-item .el-icon {\r\n            width: 14px;\r\n            height: 14px;\r\n            align-items: center;\r\n            display: flex;\r\n            color: #585656;\r\n        }\r\n        .box-menu .menu-item:hover,\r\n        .box-menu .menu-item[selected] {\r\n            background-color: #f6f6f6;\r\n            color: #1b1d1f;\r\n        }\r\n        .box-menu .menu-item:hover .el-icon {\r\n            color: #1b1d1f;\r\n        }\r\n        .box-menu .menu-item span {\r\n            margin-left: 10px;\r\n        }\r\n        .dialog {\r\n            position: absolute;\r\n            z-index: 2000;\r\n            left: 0;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background: rgba(0, 0, 0, 0.3);\r\n        }\r\n        .style-dialog {\r\n            font-size: 12px;\r\n            position: absolute;\r\n            width: 350px;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            border: 1px solid #e6e6e6;\r\n            box-shadow: 0px 0px 15px -6px;\r\n            background: white;\r\n            padding: 42px 20px 20px;\r\n            border-radius: 5px;\r\n            max-height: 100%;\r\n        }\r\n        .dialog .close {\r\n            width: 18px;\r\n            height: 18px;\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            cursor: pointer;\r\n        }\r\n        .dialog .close:hover {\r\n            opacity: 0.7;\r\n        }\r\n        .style-dialog .head {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            padding: 8px;\r\n            border-bottom: 1px solid #dddddd;\r\n        }\r\n        .move-bg {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0px;\r\n            background-color: rgba(182, 182, 182, 0);\r\n            // z-index: -1;\r\n            cursor: move;\r\n        }\r\n        .head-tool {\r\n            height: 36px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            cursor: move;\r\n            padding: 0 10px;\r\n        }\r\n        .head-tool:hover {\r\n            background-color: #f6f6f6;\r\n        }\r\n        .tool-btn {\r\n            cursor: pointer;\r\n        }\r\n        .title_cls {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n    `\r\n}\r\n"]}